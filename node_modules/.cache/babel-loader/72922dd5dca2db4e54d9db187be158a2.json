{"ast":null,"code":"var _jsxFileName = \"/home/vlad/Desktop/work/react-e-store/src/context.jsx\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from \"./data\";\nimport { Route } from \"react-router-dom\";\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      basketSubTotal: 0,\n      basketTax: 0,\n      basketTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearBasket = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.19;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          basketSubTotal: subTotal,\n          basketTax: tax,\n          basketTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearBasket: this.clearBasket\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/vlad/Desktop/work/react-e-store/src/context.jsx"],"names":["React","Component","storeProducts","detailProduct","Route","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","basketSubTotal","basketTax","basketTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearBasket","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {storeProducts, detailProduct} from \"./data\";\nimport {Route} from \"react-router-dom\";\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart: [],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        basketSubTotal: 0,\n        basketTax: 0,\n        basketTotal: 0,\n\n    };\n\n\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem];\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n\n        })\n    };\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n\n    };\n\n    handleDetail = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct: product}\n        })\n    };\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        this.setState(() => {\n                return {products: tempProducts, cart: [...this.state.cart, product]};\n            },\n            () => {\n               this.addTotals();\n            }\n        )\n    };\n\n    openModal = (id) => {\n        const product = this.getItem(id)\n        this.setState(() => {\n\n            return {modalProduct: product, modalOpen: true}\n        })\n    };\n    closeModal = () => {\n        this.setState(() => {\n            return {modalOpen: false}\n        })\n    };\n    increment = (id) => {\n       let tempCart = [...this.state.cart];\n       const selectedProduct = tempCart.find(item => item.id ===id);\n       const index = tempCart.indexOf(selectedProduct);\n       const product = tempCart[index];\n       product.count = product.count + 1;\n       product.total = product.count * product.price;\n       this.setState(() => {return{cart: [...tempCart]}}, () => {\n           this.addTotals()\n       })\n    };\n    decrement = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id ===id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        product.count = product.count - 1;\n        if (product.count === 0) {\n            this.removeItem(id)\n        }else {\n            product.total = product.count * product.price;\n            this.setState(() => {return{cart: [...tempCart]}}, () => {\n                this.addTotals()\n            })\n        }\n    };\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !==id);\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n        this.setState(() => {\n            return {\n                cart: [...tempCart],\n                products: [...tempProducts]\n            }\n        }, () => {\n            this.addTotals();\n        })\n    };\n    clearBasket = () => {\n        this.setState(() => {\n            return {cart: []}\n        },() => {\n            this.setProducts();\n            this.addTotals();\n        })\n    };\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total));\n        const tempTax = subTotal * 0.19;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n            return {\n                basketSubTotal: subTotal,\n                basketTax: tax,\n                basketTotal: total\n            }\n        })\n    };\n\n    render() {\n        return (\n            <ProductContext.Provider\n                value={{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n                    openModal: this.openModal,\n                    closeModal: this.closeModal,\n                    increment: this.increment,\n                    decrement: this.decrement,\n                    removeItem: this.removeItem,\n                    clearBasket: this.clearBasket,\n\n\n                }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}